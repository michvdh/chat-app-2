import Head from "next/head";
import Image from "next/image";
import { Inter } from "@next/font/google";
import SideNav from "@/components/SideNav";
import ContactList from "@/components/ContactList";
import ChatMain from "@/components/main/ChatMain";
import ChatMainHeader from "@/components/main/ChatMainHeader";
import React, { useState, useEffect, useRef, Fragment } from "react";
import axios from "axios";
import { useRouter } from "next/router";
import { allUsersRoute, host } from "./api/APIRoutes";
import Welcome from "@/components/main/Welcome";
import {io} from "socket.io-client";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  // This is the Chat Page where user is currently logged in

  const socket = useRef();
  const router = useRouter();
  const [contacts, setContacts] = useState([]);

  const [currentUser, setCurrentUser] = useState(undefined); 
    // this is your account

  const [currentChat, setCurrentChat] = useState(undefined);
    // this is the person you're chatting

  // const [isLoaded, setIsLoaded] = useState(false);
  const [initialRender, setInitalRender] = useState(true);


  const changeChatHandler = (chat) => {
    setCurrentChat(chat);
  };


  useEffect(() => {
    const accessLocalStorage = async () => {
      if (!localStorage.getItem("chat-app-user")) {
        router.push("/login");
      } else {
        setCurrentUser(await JSON.parse(localStorage.getItem("chat-app-user")));
      }
    };

    accessLocalStorage();
  }, []);


  useEffect(() => {
    if (currentUser) {
      socket.current = io(host);
      socket.current.emit("add-user", currentUser._id);
    }
  }, [currentUser]);


  useEffect(() => {
    if (initialRender) {
      setInitalRender(false);
    }

    if (!initialRender) {
      const getContacts = async () => {
        if (currentUser) {
          const data = await axios.get(`${allUsersRoute}/${currentUser._id}`);
          setContacts(data.data);
        }
      };
  
      getContacts();
    }

  }, [currentUser]);

  return (
    <>
      <Head>
        <title>ASG Chat App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <SideNav />
        <ContactList
          contacts={contacts}
          currentUser={currentUser}
          changeChat={changeChatHandler}
        />
        <div className="chat--main">
          <ChatMainHeader currentChat={!initialRender && currentChat ? currentChat.username : ''}/>

          {!initialRender && currentChat === undefined ? 
            <Welcome currentUser={currentUser} />
            :
            <Fragment>
              <ChatMain 
                currentUser={currentUser} 
                currentChat={currentChat}
                socket={socket}
              />
            </Fragment> 
          }
          
        </div>
      </main>
    </>
  );
}
